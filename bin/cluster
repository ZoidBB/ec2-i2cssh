#!/usr/bin/env ruby

require 'optparse'
require 'rubygems'
require 'aws-sdk'

options = {'user' => 'ec2-user', 'use_private_ip' => false}
OptionParser.new do |opts|
  opts.banner = "Usage: cluster [-t TAGS] [-l USER] [-k KEY -s SECRET] [-r region]"

  opts.on("-l", "--login [USER]", "Log in with this user (default: #{options['user']}") do |opt|
    options['user'] = opt
  end

  opts.on("-t", "--tags [TAGS]", Array, "a 'space' sparated key value pair of tags and values (i.e. role=web,database environment=dev)") do |opt|
    options['tags'] = opt
  end

  opts.on("-k", "--access-key [KEY]", "AWS access key") do |opt|
    options['aws_access_key'] = opt
  end

  opts.on("-s", "--secret-key [SECRET]", "AWS secret key") do |opt|
    options['aws_secret_key'] = opt
  end

  opts.on("-r", "--region [REGION]", "AWS region") do |opt|
    options['region'] = opt
  end

  opts.on("-p", "--use-private-ip", "Use private IP (default #{options['use_private_ip']})") do
    options['use_private_ip'] = true
  end
end.parse!

if !options['aws_secret_key'].nil? && !options['aws_access_key'].nil?
  AWS.config(access_key_id: options['aws_access_key'], secret_access_key: options['aws_secret_key'])
end

if !options['region'].nil?
  AWS.config(region: options['region'])
end

ec2 = AWS.ec2

# filter instances based on tags
instances = ec2.instances
options['tags'].each do |tag|
  tag = tag.split('=')
  instances = instances.tagged(tag[0]).tagged_values(tag[1])
end

# get dns entries for cssh
dns = nil
if options['use_private_ip']
  dns = instances.map{|instance| instance.private_ip_address}
else
  dns = instances.map{|instance| instance.dns_name}
end

cssh = (/darwin/ =~ RUBY_PLATFORM) ? 'csshX' : 'cssh'

exec "#{cssh} -l #{options['user']} #{dns.join ' '}"
